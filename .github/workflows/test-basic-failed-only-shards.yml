name: demo.playwright.failed-only-shards

on:
  workflow_dispatch:

jobs:
  test-shards:
    strategy:
      matrix:
        shard: [1, 2, 3]
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:latest
    env:
      CURRENTS_PROJECT_ID: ${{ secrets.CURRENTS_PROJECT_ID }}
      CURRENTS_RECORD_KEY: ${{ secrets.CURRENTS_RECORD_KEY }}
      CURRENTS_CI_BUILD_ID: shards-${{ github.repository }}-${{ github.run_id }}-${{ github.run_attempt }}
      CURRENTS_API_URL: ${{ secrets.CURRENTS_API_URL }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # https://github.com/actions/runner-images/issues/6775
      - run: |
          echo "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install chrome
          npm install -g @currents/cmd@beta

      - name: Prepare environment
        working-directory: ./basic
        run: |
          # if it is a retry (based on environment)
          # downloads test-results/last-run.json for the current shard
          # sets "EXTRA_PW_FLAGS=--last-failed --shard=1/1" to $GITHUB_ENV
          # otherwise sets "EXTRA_PW_FLAGS=--shard=${{ matrix.shard }}/${{ strategy.job-total }}"

          # npx currents cache get --preset last-failed-sharding

      - name: Run Tests
        continue-on-error: true
        working-directory: ./basic
        run: |
          COMMAND="npx pwc ${{ env.$EXTRA_PW_FLAGS }}"
          echo "Running command: $COMMAND"
          eval $COMMAND

      - name: Save last run results for shard ${{ matrix.shard }}
        if: ${{ always() }}
        working-directory: ./basic
        run: |
          # uploads test-results/.last-run.json for the current shard
          # 
          # npx currents cache set --preset last-failed-sharding
