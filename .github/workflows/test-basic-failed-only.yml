name: demo.playwright.failed-only

on:
  workflow_dispatch:
    inputs:
      lastFailed:
        type: choice
        required: true
        options:
          - "onretry"
          - "yes"
          - "no"
        default: "onretry"
        description: Run just the last failed tests instead of the full suite. Defaults to "onretry".
  push:
  pull_request:
    branches: [main]

jobs:
  test-shards:
    strategy:
      matrix:
        shard: [1, 2, 3]
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:latest

    steps:
      - name: Inputs
        env:
          INPUTS: ${{ toJson(inputs) }}
        run: echo "$INPUTS"

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # https://github.com/actions/runner-images/issues/6775
      - run: |
          echo "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install chrome
          npm install -g @currents/cmd@beta

      - name: Download last run results for shard ${{ matrix.shard }}
        if: ${{ github.run_attempt > 1 }}
        uses: actions/download-artifact@v4
        with:
          name: last-run-${{ github.run_id }}-shard-${{ matrix.shard }}
          path: basic/test-results

      - name: Display structure of downloaded files
        continue-on-error: true
        run: ls -R basic/test-results

      - name: Resolve Playwright options
        id: set-options
        continue-on-error: true
        env:
          CURRENTS_API_KEY: ${{ secrets.CURRENTS_API_KEY }}
          CURRENTS_REST_API_URL: ${{ secrets.CURRENTS_REST_API_URL }}
        run: |
          PROJECT_ID=${{ secrets.CURRENTS_PROJECT_ID }}
          BRANCH=""
          PW_SHARDING="${{ matrix.shard }}/${{ strategy.job-total }}"
          EXTRA_PW_FLAGS=""

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH=${{ github.head_ref }}
          else
            BRANCH=${{ github.ref_name }}
          fi
          echo "Branch name: $BRANCH"

          if [ "${{ inputs.lastFailed }}" = "yes" ] || ([ "${{ inputs.lastFailed }}" = "onretry" ] && [ ${{ github.run_attempt }} -gt 1 ]); then
            if [ ${{ github.run_attempt }} -gt 1 ]; then
              PW_SHARDING="1/1"
              EXTRA_PW_FLAGS="--last-failed"
            elif npx currents api get-run --project-id=$PROJECT_ID  --branch=$BRANCH --pw-last-failed --output=basic/test-results/.last-run.json; then
              echo "basic/test-results/.last-run.json contents"
              cat basic/test-results/.last-run.json
              EXTRA_PW_FLAGS="--last-failed"
            fi
          fi

          echo "PW_SHARDING=${PW_SHARDING}" >> $GITHUB_OUTPUT
          echo "EXTRA_PW_FLAGS=${EXTRA_PW_FLAGS}" >> $GITHUB_OUTPUT

      - name: Run Tests
        continue-on-error: true
        working-directory: ./basic
        env:
          CURRENTS_PROJECT_ID: ${{ secrets.CURRENTS_PROJECT_ID }}
          CURRENTS_RECORD_KEY: ${{ secrets.CURRENTS_RECORD_KEY }}
          CURRENTS_CI_BUILD_ID: shards-${{ github.repository }}-${{ github.run_id }}-${{ github.run_attempt }}
          CURRENTS_API_URL: ${{ secrets.CURRENTS_API_URL }}
        run: |
          PW_SHARDING=${{ steps.set-options.outputs.PW_SHARDING }}
          EXTRA_PW_FLAGS=${{ steps.set-options.outputs.EXTRA_PW_FLAGS }}

          COMMAND="npx pwc $EXTRA_PW_FLAGS --shard=$PW_SHARDING"
          echo "Running command: $COMMAND"
          eval $COMMAND

      - name: Upload last run results for shard ${{ matrix.shard }}
        if: ${{ github.run_attempt == 1 }}
        uses: actions/upload-artifact@v4
        with:
          name: last-run-${{ github.run_id }}-shard-${{ matrix.shard }}
          include-hidden-files: true
          path: basic/test-results/.last-run.json

  test-or8n:
    strategy:
      matrix:
        shard: [1, 2, 3]
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/playwright:latest

    steps:
      - name: GitHub Event
        env:
          GITHUB_EVENT_CONTEXT: ${{ toJson(github.event) }}
        run: echo "$GITHUB_EVENT_CONTEXT"

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # https://github.com/actions/runner-images/issues/6775
      - run: |
          echo "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install chrome
          npm install -g @currents/cmd@beta

      - name: Resolve Playwright options
        id: set-options
        continue-on-error: true
        env:
          CURRENTS_API_KEY: ${{ secrets.CURRENTS_API_KEY }}
          CURRENTS_REST_API_URL: ${{ secrets.CURRENTS_REST_API_URL }}
        run: |
          PREVIOUS_CI_BUILD_ID=or8n-${{ github.repository }}-${{ github.run_id }}-1
          PROJECT_ID=${{ secrets.CURRENTS_PROJECT_ID }}
          BRANCH=""
          EXTRA_PW_FLAGS=""
          EXTRA_CURRENTS_CLI_FLAGS=""

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH=${{ github.head_ref }}
          else
            BRANCH=${{ github.ref_name }}
          fi
          echo "Branch name: $BRANCH"

          if [ "${{ inputs.lastFailed }}" = "yes" ] || ([ "${{ inputs.lastFailed }}" = "onretry" ] && [ ${{ github.run_attempt }} -gt 1 ]); then
            if [ ${{ github.run_attempt }} -gt 1 ]; then
              EXTRA_CURRENTS_CLI_FLAGS="--ci-build-id=$PREVIOUS_CI_BUILD_ID"
            fi

            if npx currents api get-run --project=$PROJECT_ID --branch=$BRANCH --pw-last-failed $EXTRA_CURRENTS_CLI_FLAGS --output=basic/test-results/.last-run.json; then
              echo "basic/test-results/.last-run.json contents"
              cat basic/test-results/.last-run.json
              EXTRA_PW_FLAGS="--last-failed"
            fi
          fi

          echo "EXTRA_PW_FLAGS=${EXTRA_PW_FLAGS}" >> $GITHUB_OUTPUT

      - name: Run Tests
        working-directory: ./basic
        env:
          CURRENTS_PROJECT_ID: ${{ secrets.CURRENTS_PROJECT_ID }}
          CURRENTS_RECORD_KEY: ${{ secrets.CURRENTS_RECORD_KEY }}
          CURRENTS_CI_BUILD_ID: or8n-${{ github.repository }}-${{ github.run_id }}-${{ github.run_attempt }}
          CURRENTS_API_URL: ${{ secrets.CURRENTS_API_URL }}
        run: |
          EXTRA_PW_FLAGS=${{ steps.set-options.outputs.EXTRA_PW_FLAGS }}

          COMMAND="npx pwc-p ${EXTRA_PW_FLAGS}"
          echo "Running command: $COMMAND"
          eval $COMMAND
